import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Lesson {
	
	/* Controllare se una stringa contiene una sequenza di 10 caratteri numerici*/

	public static boolean hasTenDigits(String s) {
		int noDigits = 0;
		for (int i=0; i<s.length();i++) {
			char c = s.charAt(i);
			if (Character.isDigit(c)) {
				noDigits++;
				if (noDigits == 10) return true;
			} else {
				noDigits = 0;
			}
		}
		return false;
	}
	
	/* Controllare se una stringa contiene una sequenza di 10
	 * caratteri consecutivi usando le espressioni regolari
	 */
	
	public static boolean hasTenDigitsRegEx(String s) {
			//return s.matches("(.*)([0-9]{10})(.*)");
			return s.matches("(.*)(\\d{10})(.*)");
	}
	
	
	public static boolean regexGroups (String regex, String s) {
		//Genero un oggetto pattern in cui compilo la regexp
		Pattern p = Pattern.compile(regex);														//capisce quanti gruppi ci sono
		Matcher m = p.matcher(s);
		if (m.find()) {
			for (int i = 0; i <= m.groupCount(); i++) {
				System.out.println("Group"+i+": "+m.group(i));
			}
			return true;
		} else {
			return false;
		}
		
	}
	  
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		if (hasTenDigits("afsd9876543210jjjj")) {
			System.out.println("La stringa contiene dieci numeri consecutivi");
		} else {
			System.out.println("La stringa non contiene dieci numeri consecutivi");
		}
		
		if (hasTenDigitsRegEx("afsd9876543210jjjj")) {
			System.out.println("La stringa contiene dieci numeri consecutivi");
		} else {
			System.out.println("La stringa non contiene dieci numeri consecutivi");
		}
	      
		if (regexGroups("(.*)([0-9]{10})(.*)","afsd987657743210jjjj")) {							//ci sono 4 gruppi, le parentesi messe insieme, prima, seconda e terza parentesi
			System.out.println ("La stringa contiene 10 cifre");
		} else {
			System.out.println ("La stringa non contiene 10 cifre");
		}
	}

}
